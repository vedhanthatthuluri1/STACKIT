rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(resourceId) {
      return request.auth.uid == resourceId;
    }
    
    function isResourceOwner(resource) {
      return request.auth.uid == resource.data.authorId;
    }

    match /users/{userId} {
      allow read;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
    }

    match /questions/{questionId} {
      allow read;
      allow create: if isUserAuthenticated() && isResourceOwner(request.resource);
      allow update: if isUserAuthenticated() && (
        (isResourceOwner(resource) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'description', 'code', 'tags'])) ||
        (request.resource.data.votes == resource.data.votes + 1 || request.resource.data.votes == resource.data.votes - 1) ||
        (request.resource.data.answersCount == resource.data.answersCount + 1)
      );

      match /answers/{answerId} {
        allow read;
        allow create: if isUserAuthenticated() && isResourceOwner(request.resource);
        allow update: if isUserAuthenticated() && (
          (isResourceOwner(resource) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['content'])) ||
          (request.resource.data.votes == resource.data.votes + 1 || request.resource.data.votes == resource.data.votes - 1)
        );
      }
    }
    
    match /users/{userId}/votes/{voteId} {
        allow read, write: if isUserAuthenticated() && isOwner(userId);
    }

    match /notifications/{notificationId} {
      // Users can only read notifications intended for them.
      allow read: if isUserAuthenticated() && request.auth.uid == resource.data.recipientId;
      allow create: if isUserAuthenticated();
      // Users can only mark their own notifications as read.
      allow update: if isUserAuthenticated() && request.auth.uid == resource.data.recipientId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }
  }
}
