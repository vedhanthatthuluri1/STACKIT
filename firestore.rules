rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Questions can be read by anyone, but only created/updated by authenticated users.
    match /questions/{questionId} {
      allow read: if true;
      allow create, update: if request.auth != null && isOwner(request.resource.data.authorId);
      allow delete: if request.auth != null && isOwner(resource.data.authorId);

      // Answers can be read by anyone.
      match /answers/{answerId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth != null && isOwner(resource.data.authorId);

        // Can be deleted by answer author OR question author.
        function isQuestionOwner() {
          return get(/databases/$(database)/documents/questions/$(questionId)).data.authorId == request.auth.uid;
        }
        allow delete: if request.auth != null && (isOwner(resource.data.authorId) || isQuestionOwner());
      }
    }

    // Users can be viewed by any authenticated user, but only updated by the owner.
    match /users/{userId} {
      function isOwner() {
        return request.auth.uid == userId;
      }
      // Allow profile reads for any authenticated user
      allow get: if request.auth != null;
      // Allow querying the user list for any authenticated user
      allow list: if request.auth != null;
      
      // Allow user creation if the user is authenticated and the UID matches.
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;

      // Allow updates only by the user themselves.
      allow update: if isOwner();
      
      // Votes subcollection
      match /votes/{voteId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Notifications can only be accessed by the recipient.
    match /notifications/{notificationId} {
        allow read, write: if request.auth != null && isOwner(resource.data.recipientId);
    }
  }
}
