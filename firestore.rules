rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Anyone can read user profiles.
    // - Users can only create their own profile.
    // - Users can only update their own profile.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Questions:
    // - Anyone can read questions.
    // - Authenticated users can create questions.
    // - Users can only update their own questions (title, description, code, tags).
    // - Users can update votes and answersCount on any question.
    match /questions/{questionId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if (request.auth.uid == resource.data.authorId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'description', 'code', 'tags']))
                    || (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['votes', 'answersCount', 'views']));
      
      // Answers:
      // - Anyone can read answers.
      // - Authenticated users can create answers.
      // - Users can only update their own answers.
      match /answers/{answerId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.authorId;
      }
    }
    
    // Votes:
    // - Users can only create/delete their own votes.
    match /users/{userId}/votes/{voteId} {
      allow write: if request.auth.uid == userId;
    }
  }
}
