rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
      match /votes/{voteId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /questions/{questionId} {
      allow read;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid != null && (
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['views'])) ||
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['votes'])) ||
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['answersCount']))
      );
      
      match /answers/{answerId} {
        allow read;
        allow create: if request.auth.uid != null;
        allow update: if request.auth.uid == resource.data.authorId;
        allow delete: if request.auth.uid == resource.data.authorId;
      }
    }
    
    match /notifications/{notificationId} {
      // Allow users to query for their own notifications.
      // This rule ensures that any 'list' (query) operation MUST include a `where('recipientId', '==', request.auth.uid)` clause.
      allow list: if request.auth != null && request.query.where.recipientId == request.auth.uid;
      
      // Allow users to get their own individual notifications.
      allow get: if request.auth != null && get(/databases/$(database)/documents/notifications/$(notificationId)).data.recipientId == request.auth.uid;
      
      // Allow creating notifications and updating the 'read' status.
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.recipientId && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }
  }
}
