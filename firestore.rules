rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users:
    // - Anyone can create a user profile (register)
    // - Only the user themselves can update their profile
    // - Anyone can read user profiles
    match /users/{userId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;
    }

    // Questions:
    // - Logged-in users can create questions
    // - Anyone can read questions
    // - Only the author can update their own question
    // - Logged in users can update answer counts
    match /questions/{questionId} {
      allow read;
      allow create: if request.auth != null;
      allow update: if (request.auth.uid == resource.data.authorId) || 
                       (request.auth != null && request.resource.data.answersCount == resource.data.answersCount + 1);
      
      // Answers Subcollection
      match /answers/{answerId} {
        allow read;
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.authorId;
      }
    }

    // Votes:
    // - A user can only manage their own votes
    match /users/{userId}/votes/{voteId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Notifications:
    // - A user can only read their own notifications.
    // - A logged-in user can create a notification.
    match /notifications/{notificationId} {
        allow get: if request.auth.uid == resource.data.recipientId;
        allow list: if request.auth.uid == request.query.where.recipientId;
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.recipientId;
    }
  }
}
