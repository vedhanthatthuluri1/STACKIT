rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /questions/{questionId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null && (
        (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['votes', 'views'])
        ) ||
        (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['answersCount']) && request.resource.data.answersCount == resource.data.answersCount + 1
        )
      );
    }
    
    match /questions/{questionId}/answers/{answerId} {
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow read: if true;
    }
    
    match /users/{userId}/votes/{voteId} {
      allow read, create, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /notifications/{notificationId} {
      // Use 'list' for collection queries, and 'get' for single document reads.
      allow list: if request.auth != null && request.query.where.get('recipientId') == request.auth.uid;
      allow get: if request.auth != null && resource.data.recipientId == request.auth.uid;

      allow create: if request.auth != null && 
                      request.resource.data.senderId == request.auth.uid &&
                      request.resource.data.recipientId != request.auth.uid;
                      
      allow update: if request.auth != null && resource.data.recipientId == request.auth.uid;
    }
  }
}
